#!/usr/bin/env bash

## Worker destruction script

exec 3>&1 # make stdout available as fd 3 for the result, echo "hello world" >&3 (will print to stdout)
exec 1>&2 # redirect all output to stderr for logging, echo "hello world" (will print to stderr)

set -eu # e to exit on any none-zero return, u to return error on accessing uninitialized variable

home=$1
resource_dir=$(dirname $0)

# load env, and functions used to configure ssh, fly and others.
# shellcheck source=common.sh
. $resource_dir/common.sh

init_vars
init_fly
init_ssh

# Retiring worker
droplet_ip=$(<$home/$WORKER_NAME/ip)
ssh root@$droplet_ip \
  "docker exec -it $WORKER_NAME \
    concourse retire-worker --name=$WORKER_NAME --tsa-host=$CO_TSA_HOST --tsa-public-key=/etc/concourse/tsa_host_key.pub --tsa-worker-private-key=/etc/concourse/worker_key"

# Destroy worker droplet
echo "Destroying droplet: \"$WORKER_NAME\""

while true
do
  status=$(\
  curl -sX DELETE "https://api.digitalocean.com/v2/droplets?tag_name=$WORKER_NAME" \
    -w "%{http_code}" \
    -o /dev/null \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $DO_API_KEY"\
  )

  if [ $status -eq '204' ]; then

    echo "Droplet \"$WORKER_NAME\" was destroyed successfully :D"
    break
  else
    echo "Failed to destroy droplet \"$WORKER_NAME\" :( trying again in few seconds.."
    sleep 3
  fi
done

echo
echo "Trying to remove the worker \"$WORKER_NAME\" from Concourse TSA registry.."
# Prune the worker from concourse web service
while true
do
  set +e
  fly -t main pw -w $WORKER_NAME > /dev/null
  fly -t main ws | cut -d\  -f1 | grep "^$WORKER_NAME\$" > /dev/null; R=$?
  set -e
  if [ $R -ne 0 ]; then
    echo "Concourse worker $WORKER_NAME was successfully removed from the TSA server :D"
    break
  else
    for i in $(seq 10 -1 1); do
      printf "Concourse worker $WORKER_NAME is still registered :( trying to prune it again in ${i}s.  \r"
      sleep 1
    done
    printf "Concourse worker $WORKER_NAME is still registered :( trying to prune it again now.         \n"
  fi
done

echo '
{
  "version": {"ref": "'$random_ver'"},
  "metadata": [
    {"name": "status", "value": "Worker destroyed"},
    {"name": "worker_name", "value": '"\"$WORKER_NAME\""'}
  ]
}' >&3
